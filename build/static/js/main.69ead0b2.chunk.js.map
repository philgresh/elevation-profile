{"version":3,"sources":["store/actions/chartActions.js","store/actions/mapActions.js","Buttons.js","Chart/chartSVGGenerator.js","Chart/ChartContainer.js","MapboxContainer/Pin.js","MapboxContainer/Markers.js","MapboxContainer/MapboxContainer.js","App.js","store/reducers/chartReducer.js","store/reducers/mapReducer.js","serviceWorker.js","index.js"],"names":["replotPointsNearAntimeridian","pins","map","lng","newLng","getURLParams","a","samples","Math","min","length","newPins","process","path","reduce","acc","index","lat","newAcc","params","key","url","indexedElevData","data","results","p","elevation","location","setSubmitting","submitting","dispatch","type","pushPinAction","pin","StyledButtons","styled","div","StyledButton","button","StyledClearButton","GetElevationProfileButton","getElevationData","numPins","disabled","buttonText","onClick","id","ClearPinsButton","clearPins","connect","state","chart","getState","axios","get","then","indexedData","elevationData","mapHeight","catch","err","console","error","finally","hasPins","ChartSVG","chartProps","width","height","margin","mainRef","useRef","useEffect","selectAll","remove","mainSVG","select","current","elevExtent","extent","point","color","scaleDiverging","t","interpolateRdYlBu","domain","x","scaleLinear","range","left","right","y","nice","bottom","top","elevCurve","d3line","curve","curveNatural","defined","d","Number","isNaN","append","attr","style","call","g","axisLeft","text","ticks","join","interpolator","datum","animate","duration","ref","viewBox","size","fill","stroke","pinStyle","commonProps","offsetTop","offsetLeft","draggable","Markers","onMarkerDragEnd","idx","longitude","latitude","title","onDragEnd","e","Pin","StyledMap","generatePaint","colorStops","forEach","stop","push","actions","pushPin","setPins","setPinsAction","useState","position","zoom","viewport","setViewport","paint","useMemo","oldViewport","linestringGeoJSON","coordinates","mapboxApiAccessToken","mapStyle","onViewportChange","nextViewport","preventDefault","lngLat","onMapClick","update","$set","lineMetrics","chartHeight","chartMargin","hasElevationData","chartMargins","className","initState","window","innerWidth","reducer","action","mapProps","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","middlewares","thunkMiddleware","combinedReducers","combineReducers","chartReducer","mapReducer","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.69ead0b2.chunk.js","sourcesContent":["import axios from 'axios';\n// import fetch from 'cross-fetch';\nconst NUM_SAMPLES = 100;\n\nconst replotPointsNearAntimeridian = pins =>\n  pins.map(([lng, lat]) => {\n    let newLng = lng;\n    if (lng > 180) newLng -= 360;\n    if (lng < -180) newLng += 360;\n    return [newLng, lat];\n  });\n\nconst getURLParams = async pins => {\n  const samples = Math.min(NUM_SAMPLES * (pins.length - 1), 500);\n  const newPins = replotPointsNearAntimeridian(pins);\n  const key = process.env.REACT_APP_GOOGLE_MAPS_ELEV_API_KEY;\n  const path = newPins.reduce((acc, [lng, lat], index) => {\n    let newAcc = `${acc}${lat},${lng}`;\n    if (index !== newPins.length - 1) newAcc += '|';\n    return newAcc;\n  }, '');\n  const params = {\n    samples,\n    path,\n    key,\n  };\n  const url =\n    'https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/elevation/json';\n  return { url, params };\n};\n\nconst indexedElevData = data => {\n  return data.results.map((p, index) => ({\n    index,\n    elevation: p.elevation,\n    lat: p.location.lat,\n    lng: p.location.lng,\n  }));\n};\n\nexport const setSubmitting = ({ submitting }) => {\n  return dispatch => {\n    dispatch({ submitting, type: 'SET_SUBMITTING' });\n  };\n};\n\nexport const getElevationDataAction = () => {\n  return async (dispatch, getState) => {\n    const { map } = getState();\n    const { pins } = map;\n\n    dispatch(setSubmitting({ submitting: true }));\n\n    const { url, params } = await getURLParams(pins);\n\n    // eslint-disable-next-line no-return-await\n    return await axios\n      .get(url, { params })\n      .then(({ data }) => {\n        const indexedData = indexedElevData(data);\n        dispatch({\n          type: 'SET_ELEVATION_DATA',\n          elevationData: [...indexedData],\n        });\n        dispatch({ type: 'SET_MAP_HEIGHT', mapHeight: '75vh' });\n      })\n      .catch(err => {\n        console.error(err);\n      })\n      .finally(() => dispatch(setSubmitting({ submitting: false })));\n  };\n};\n","const fitMapToPins = pins => {\n  let northEast = {};\n  let southWest = {};\n\n  return { northEast, southWest };\n};\n\nexport const setMapHeight = mapHeight => dispatch =>\n  dispatch({ mapHeight, type: 'SET_MAP_HEIGHT' });\n\nexport const pushPinAction = pin => {\n  return dispatch => dispatch({ type: 'PUSH_PIN', pin });\n};\n\nexport const setPinsAction = pins => {\n  return dispatch => dispatch({ type: 'SET_PINS', pins });\n};\n\nexport const clearPinsAction = () => {\n  return dispatch => {\n    dispatch({ type: 'CLEAR_PINS' });\n    dispatch({\n      type: 'SET_ELEVATION_DATA',\n      elevationData: [],\n    });\n    dispatch({\n      type: 'SET_MAP_HEIGHT',\n      mapHeight: '100vh',\n    });\n  };\n};\n\nexport default pushPinAction;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Loading from 'react-simple-loading';\nimport styled from 'styled-components';\nimport { getElevationDataAction } from './store/actions/chartActions';\nimport { clearPinsAction } from './store/actions/mapActions';\n\nconst StyledButtons = styled.div`\n  display: flex;\n  position: fixed;\n  flex-wrap: wrap;\n  z-index: 5;\n  margin: 0 2rem;\n`;\n\nconst StyledButton = styled.button`\n  flex: 2 1 250px;\n  border: none;\n  background: teal;\n  color: white;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  margin: 0.5rem;\n  -webkit-box-shadow: 0px 5px 5px 1px rgba(34, 34, 34, 0.5);\n  -moz-box-shadow: 0px 5px 5px 1px rgba(34, 34, 34, 0.5);\n  box-shadow: 0px 5px 5px 1px rgba(34, 34, 34, 0.5);\n  cursor: pointer;\n  &:hover {\n    background-color: #006464;\n  }\n`;\n\nconst StyledClearButton = styled(StyledButton)`\n  flex: 1 1 auto;\n  background-color: #eeeeee;\n  color: teal;\n  &:hover {\n    background-color: #dddddd;\n    color: #004040;\n  }\n`;\n\nconst GetElevationProfileButton = ({\n  getElevationData,\n  submitting,\n  numPins,\n}) => {\n  const disabled = submitting || numPins < 2;\n  let buttonText = (\n    <>\n      <strong>Get my elevation profile!</strong>\n      <br />\n      Or click to add more points\n    </>\n  );\n  if (numPins === 0) buttonText = 'Click anywhere to drop an endpoint';\n  if (numPins === 1) {\n    buttonText = 'Click anywhere to drop another endpoint';\n  }\n  return (\n    <StyledButton\n      disabled={disabled}\n      onClick={getElevationData}\n      id=\"get-elevation-profile-button\"\n    >\n      {submitting ? <Loading /> : buttonText}\n    </StyledButton>\n  );\n};\n\nconst ClearPinsButton = ({ disabled, clearPins }) => (\n  <StyledClearButton onClick={clearPins} disabled={disabled} id=\"clear-button\">\n    Clear pins\n  </StyledClearButton>\n);\n\nconst Buttons = ({ getElevationData, clearPins, numPins, submitting }) => {\n  const hasPins = numPins > 0;\n  return (\n    <StyledButtons>\n      <GetElevationProfileButton\n        getElevationData={getElevationData}\n        submitting={submitting}\n        numPins={numPins}\n      />\n      {hasPins && (\n        <ClearPinsButton\n          clearPins={clearPins}\n          disabled={!hasPins || submitting}\n        />\n      )}\n    </StyledButtons>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getElevationData: () => dispatch(getElevationDataAction()),\n    clearPins: () => dispatch(clearPinsAction()),\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    submitting: state.chart.submitting,\n    numPins: state.map.pins.length,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons);\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useRef } from 'react';\n// import * as d3 from 'd3';\nimport { extent, ticks } from 'd3-array';\nimport { axisLeft } from 'd3-axis';\nimport { scaleDiverging, scaleLinear } from 'd3-scale';\nimport { select, selectAll } from 'd3-selection';\nimport { line as d3line, curveNatural } from 'd3-shape';\nimport { interpolateRdYlBu } from 'd3-scale-chromatic';\nimport SvgLines from 'react-mt-svg-lines';\n\nconst ChartSVG = ({ chartProps, elevationData }) => {\n  const { width, height, margin } = chartProps;\n\n  const mainRef = useRef();\n\n  useEffect(() => {\n    selectAll('svg > *').remove();\n    const mainSVG = select(mainRef.current);\n    const elevExtent = extent(elevationData, point => point.elevation);\n    const color = scaleDiverging(t => interpolateRdYlBu(1 - t)).domain(\n      elevExtent,\n    );\n\n    const x = scaleLinear()\n      .domain([0, elevationData.length])\n      .range([margin.left, width - margin.right]);\n\n    const y = scaleLinear()\n      .domain(elevExtent)\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = g =>\n      g\n        .attr('transform', `translate(0,${height - margin.bottom})`)\n        .call(g => g.select('.domain').remove());\n\n    const yAxis = g =>\n      g\n        .attr('transform', `translate(${margin.left},0)`)\n        .call(axisLeft(y))\n        .call(g => g.select('.domain').remove())\n        .call(g =>\n          g\n            .select('.tick:last-of-type text')\n            .append('tspan')\n            .text(' meters'),\n        );\n\n    // const scaleIndex = scaleLinear()\n    //   .domain([0, elevationData.length])\n    //   .range([10, width - 10]);\n\n    // const scaleElev = scaleLinear()\n    //   .domain([maxElev, minElev])\n    //   .range([10, height]);\n\n    const elevCurve = d3line()\n      .curve(curveNatural)\n      .defined(d => !Number.isNaN(d.elevation))\n      .x(d => x(d.index))\n      .y(d => y(d.elevation));\n\n    // console.log({\n    //   zero: y(0),\n    //   elev0: y(elevExtent[0]),\n    //   elev1: y(elevExtent[1]),\n    // });\n    if (y(0) < y(elevExtent[0]) || y(0) > y(elevExtent[1])) {\n      mainSVG\n        .append('line')\n        .attr('id', 'waterline')\n        .style('stroke', 'lightblue')\n        .style('stroke-opacity', 0.5)\n        .style('fill', '#')\n        .style('stroke-width', 2)\n        .style('stroke-dasharray', '10 5 10')\n        .attr('x1', margin.left)\n        .attr('y1', y(0))\n        .attr('x2', width - margin.right)\n        .attr('y2', y(0));\n    }\n\n    mainSVG.append('g').call(xAxis);\n    mainSVG.append('g').call(yAxis);\n\n    const mainSVGDefs = mainSVG.append('defs');\n\n    const mainGradient = mainSVGDefs\n      .append('linearGradient')\n      .attr('id', 'mainGradient');\n\n    mainGradient\n      .attr('id', 'gradient')\n      .attr('gradientUnits', 'userSpaceOnUse')\n      .attr('x1', margin.left)\n      .attr('y1', margin.top)\n      .attr('x2', width - margin.right)\n      .attr('y2', height - margin.bottom)\n      .selectAll('stop')\n      .data(ticks(0, 1, 10))\n      .join('stop')\n      .attr('offset', d => d)\n      .attr('stop-color', color.interpolator());\n\n    mainSVG\n      .append('path')\n      .datum(elevationData)\n      .attr('fill', 'transparent')\n      .attr('stroke', 'url(#gradient)')\n      .attr('stroke-width', 3)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('d', elevCurve);\n  }, [elevationData]);\n  return (\n    <SvgLines animate duration={500}>\n      <svg ref={mainRef} viewBox={`0, 0, ${width}, ${height}`} />\n    </SvgLines>\n  );\n};\n\nexport default ChartSVG;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ChartSVG from './chartSVGGenerator';\n\nconst ChartContainer = ({ chartProps, elevationData }) => {\n  return <ChartSVG chartProps={chartProps} elevationData={elevationData} />;\n};\n\nconst mapStateToProps = state => {\n  return {\n    elevationData: state.chart.elevationData,\n    chartProps: state.chart.chartProps,\n  };\n};\n\nexport default connect(mapStateToProps, null)(ChartContainer);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nexport default function({ size, fill = '#D00', stroke = 'none' }) {\n  const pinStyle = {\n    fill,\n    stroke,\n  };\n\n  return (\n    <svg height={size} viewBox=\"0 0 24 24\" style={pinStyle}>\n      <path d={ICON} />\n    </svg>\n  );\n}\n","import React from 'react';\nimport { Marker } from 'react-map-gl';\nimport Pin from './Pin';\n\nconst commonProps = {\n  offsetTop: -20,\n  offsetLeft: -10,\n  draggable: true,\n};\nconst Markers = ({ pins, onMarkerDragEnd }) => {\n  return pins.map(([lng, lat], idx) => (\n    <Marker\n      longitude={lng}\n      latitude={lat}\n      key={`${lng},${lat}`}\n      title={`${lng},${lat}`}\n      onDragEnd={e => onMarkerDragEnd(e, idx)}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...commonProps}\n    >\n      <Pin size={20} fill=\"#D00000CC\" />\n      {/* {idx} */}\n    </Marker>\n  ));\n};\n\nexport default Markers;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport ReactMapGL, { Layer, NavigationControl, Source } from 'react-map-gl';\nimport { ticks } from 'd3-array';\nimport { scaleDiverging } from 'd3-scale';\nimport { interpolateRdYlBu } from 'd3-scale-chromatic';\nimport update from 'immutability-helper';\nimport styled from 'styled-components';\nimport Markers from './Markers';\nimport { pushPinAction, setPinsAction } from '../store/actions/mapActions';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_API_KEY;\nconst mapStyle = 'mapbox://styles/pgres54268/cjuiu9aay60dx1fp784rt3x7r';\n\nconst StyledMap = styled.div`\n  transition: all 1.5s ease-in-out;\n  /* transition: transform 300ms ease-in-out; */\n`;\n\nexport const colorRamp = stop => {\n  const color = scaleDiverging(t => interpolateRdYlBu(1 - t)).domain([\n    0,\n    0.5,\n    1,\n  ]);\n  return color(stop);\n};\n\nconst generatePaint = () => {\n  const colorStops = [];\n  ticks(0, 1, 10).forEach(t => {\n    colorStops.push(t);\n    colorStops.push(colorRamp(t));\n  });\n  const paint = {\n    'line-color': '#ff0000',\n    'line-width': 2,\n    'line-gradient': [\n      'interpolate',\n      ['linear'],\n      ['line-progress'],\n      ...colorStops,\n    ],\n  };\n\n  return paint;\n};\n\nconst MapboxContainer = ({ mapHeight, pins, actions }) => {\n  const hasPins = pins.length > 0;\n  const { pushPin, setPins } = actions;\n  const [viewport, setViewport] = useState({\n    height: '100vh',\n    width: '100vw',\n    position: 'absolute',\n    longitude: -119,\n    latitude: 36,\n    zoom: 5,\n  });\n\n  const paint = useMemo(() => generatePaint(), []);\n\n  useEffect(() => {\n    setViewport(oldViewport => ({ ...oldViewport, height: mapHeight }));\n  }, [mapHeight, pins]);\n\n  const onMapClick = e => {\n    e.preventDefault();\n    pushPin(e.lngLat);\n  };\n\n  const onMarkerDragEnd = (e, index) => {\n    e.preventDefault();\n    const newPins = update(pins, {\n      [index]: { $set: [...e.lngLat] },\n    });\n    setPins(newPins);\n  };\n\n  const onViewportChange = nextViewport => {\n    if (viewport.longitude * nextViewport.longitude < 0) {\n      // TODO:\n      // We are moving across the antimeridian and need to\n      //   re-plot any pins near it\n      // const newPins = replotPinsNearAntimeridian(pins);\n      // console.log(pins, newPins);\n      // setPins(newPins);\n    }\n\n    setViewport({\n      ...nextViewport,\n      width: '100vw',\n    });\n  };\n\n  const linestringGeoJSON = { type: 'LineString', coordinates: [...pins] };\n  return (\n    <StyledMap>\n      <ReactMapGL\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        mapStyle={mapStyle}\n        onViewportChange={onViewportChange}\n        onClick={e => onMapClick(e)}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...viewport}\n      >\n        {hasPins && (\n          <div id=\"pin-markers\">\n            <Markers pins={pins} onMarkerDragEnd={onMarkerDragEnd} />\n            <Source\n              id=\"my-lines\"\n              type=\"geojson\"\n              data={linestringGeoJSON}\n              lineMetrics\n            >\n              <Layer id=\"lines\" type=\"line\" paint={{ ...paint }} />\n            </Source>\n          </div>\n        )}\n        <div style={{ position: 'absolute', right: 0 }}>\n          <NavigationControl />\n        </div>\n      </ReactMapGL>\n    </StyledMap>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {\n      pushPin: pin => dispatch(pushPinAction(pin)),\n      setPins: pins => dispatch(setPinsAction(pins)),\n    },\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    submitting: state.chart.submitting,\n    pins: state.map.pins,\n    // mapHeight: state.mapHeight,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapboxContainer);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Buttons from './Buttons';\nimport ChartContainer from './Chart/ChartContainer';\nimport MapboxContainer from './MapboxContainer/MapboxContainer';\nimport './styles.css';\n\nconst App = ({ elevationData, chartHeight, chartMargin }) => {\n  const hasElevationData = elevationData.length > 0;\n  const chartMargins = chartMargin.top + chartMargin.bottom;\n  const mapHeight = hasElevationData\n    ? `calc(100vh - ${chartHeight}px - ${chartMargins}px)`\n    : '100vh';\n  return (\n    <div className=\"App\">\n      <Buttons />\n      <MapboxContainer mapHeight={mapHeight} />\n      {hasElevationData && <ChartContainer />}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    elevationData: state.chart.elevationData,\n    chartHeight: state.chart.chartProps.height,\n    chartMargin: state.chart.chartProps.margin,\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","const initState = {\n  submitting: false,\n  elevationData: [],\n  chartProps: {\n    width: window.innerWidth - 50,\n    height: '200',\n    margin: { top: 20, right: 100, bottom: 20, left: 100 },\n  },\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'SET_SUBMITTING': {\n      return {\n        ...state,\n        submitting: action.submitting,\n      };\n    }\n\n    case 'SET_ELEVATION_DATA': {\n      return {\n        ...state,\n        elevationData: [...action.elevationData],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const initState = {\n  mapProps: {\n    mapHeight: '100vh',\n  },\n  pins: [],\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'PUSH_PIN': {\n      const newPins = [...state.pins, action.pin];\n      return {\n        ...state,\n        pins: newPins,\n      };\n    }\n    case 'SET_PINS': {\n      return {\n        ...state,\n        pins: [...action.pins],\n      };\n    }\n    case 'CLEAR_PINS': {\n      return {\n        ...initState,\n        pins: [],\n      };\n    }\n    case 'SET_MAP_HEIGHT': {\n      return {\n        ...state,\n        mapProps: {\n          ...state.mapProps,\n          mapHeight: action.mapHeight,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport chartReducer from './store/reducers/chartReducer';\nimport mapReducer from './store/reducers/mapReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst middlewares = [thunkMiddleware];\n\nif (process.env.NODE_ENV === `development`) {\n  // eslint-disable-next-line global-require\n  const { logger } = require(`redux-logger`);\n  middlewares.push(logger);\n}\n\nconst combinedReducers = combineReducers({\n  chart: chartReducer,\n  map: mapReducer,\n});\n\nconst store = createStore(combinedReducers, applyMiddleware(...middlewares));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}