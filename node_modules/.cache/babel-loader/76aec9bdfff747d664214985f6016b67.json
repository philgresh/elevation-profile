{"ast":null,"code":"import _defineProperty from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  transition: all 1.5s ease-in-out;\\n  /* transition: transform 300ms ease-in-out; */\\n\"]);_templateObject=function _templateObject(){return data;};return data;}/* eslint-disable react/prop-types */import React,{useState,useEffect,useMemo}from'react';import{connect}from'react-redux';import ReactMapGL,{Layer,NavigationControl,Source}from'react-map-gl';import{ticks}from'd3-array';import{scaleDiverging}from'd3-scale';import{interpolateRdYlBu}from'd3-scale-chromatic';import update from'immutability-helper';import styled from'styled-components';import Markers from'./Markers';import{pushPinAction,setPinsAction}from'../store/actions/mapActions';import'mapbox-gl/dist/mapbox-gl.css';var MAPBOX_TOKEN=process.env.REACT_APP_MAPBOX_API_KEY;var mapStyle='mapbox://styles/pgres54268/cjuiu9aay60dx1fp784rt3x7r';var StyledMap=styled.div(_templateObject());export var colorRamp=function colorRamp(stop){var color=scaleDiverging(function(t){return interpolateRdYlBu(1-t);}).domain([0,0.5,1]);return color(stop);};var generatePaint=function generatePaint(){var colorStops=[];ticks(0,1,10).forEach(function(t){colorStops.push(t);colorStops.push(colorRamp(t));});var paint={'line-color':'#ff0000','line-width':2,'line-gradient':['interpolate',['linear'],['line-progress']].concat(colorStops)};return paint;};var MapboxContainer=function MapboxContainer(_ref){var mapHeight=_ref.mapHeight,pins=_ref.pins,actions=_ref.actions;var hasPins=pins.length>0;var pushPin=actions.pushPin,setPins=actions.setPins;var _useState=useState({height:'100vh',width:'100vw',position:'absolute',longitude:-119,latitude:36,zoom:5}),_useState2=_slicedToArray(_useState,2),viewport=_useState2[0],setViewport=_useState2[1];var paint=useMemo(function(){return generatePaint();},[]);useEffect(function(){setViewport(function(oldViewport){return _objectSpread({},oldViewport,{height:mapHeight});});},[mapHeight,pins]);var onMapClick=function onMapClick(e){e.preventDefault();pushPin(e.lngLat);};var onMarkerDragEnd=function onMarkerDragEnd(e,index){e.preventDefault();var newPins=update(pins,_defineProperty({},index,{$set:_toConsumableArray(e.lngLat)}));setPins(newPins);};var onViewportChange=function onViewportChange(nextViewport){if(viewport.longitude*nextViewport.longitude<0){// TODO:\n// We are moving across the antimeridian and need to\n//   re-plot any pins near it\n// const newPins = replotPinsNearAntimeridian(pins);\n// console.log(pins, newPins);\n// setPins(newPins);\n}setViewport(_objectSpread({},nextViewport,{width:'100vw'}));};var linestringGeoJSON={type:'LineString',coordinates:_toConsumableArray(pins)};return React.createElement(StyledMap,null,React.createElement(ReactMapGL,Object.assign({mapboxApiAccessToken:MAPBOX_TOKEN,mapStyle:mapStyle,onViewportChange:onViewportChange,onClick:function onClick(e){return onMapClick(e);}// eslint-disable-next-line react/jsx-props-no-spreading\n},viewport),hasPins&&React.createElement(\"div\",{id:\"pin-markers\"},React.createElement(Markers,{pins:pins,onMarkerDragEnd:onMarkerDragEnd}),React.createElement(Source,{id:\"my-lines\",type:\"geojson\",data:linestringGeoJSON,lineMetrics:true},React.createElement(Layer,{id:\"lines\",type:\"line\",paint:_objectSpread({},paint)}))),React.createElement(\"div\",{style:{position:'absolute',right:0}},React.createElement(NavigationControl,null))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actions:{pushPin:function pushPin(pin){return dispatch(pushPinAction(pin));},setPins:function setPins(pins){return dispatch(setPinsAction(pins));}}};};var mapStateToProps=function mapStateToProps(state){return{submitting:state.chart.submitting,pins:state.map.pins// mapHeight: state.mapHeight,\n};};export default connect(mapStateToProps,mapDispatchToProps)(MapboxContainer);","map":{"version":3,"sources":["/Users/phil/Documents/elevation-profile/src/MapboxContainer/MapboxContainer.js"],"names":["React","useState","useEffect","useMemo","connect","ReactMapGL","Layer","NavigationControl","Source","ticks","scaleDiverging","interpolateRdYlBu","update","styled","Markers","pushPinAction","setPinsAction","MAPBOX_TOKEN","process","env","REACT_APP_MAPBOX_API_KEY","mapStyle","StyledMap","div","colorRamp","stop","color","t","domain","generatePaint","colorStops","forEach","push","paint","MapboxContainer","mapHeight","pins","actions","hasPins","length","pushPin","setPins","height","width","position","longitude","latitude","zoom","viewport","setViewport","oldViewport","onMapClick","e","preventDefault","lngLat","onMarkerDragEnd","index","newPins","$set","onViewportChange","nextViewport","linestringGeoJSON","type","coordinates","right","mapDispatchToProps","dispatch","pin","mapStateToProps","state","submitting","chart","map"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport ReactMapGL, { Layer, NavigationControl, Source } from 'react-map-gl';\nimport { ticks } from 'd3-array';\nimport { scaleDiverging } from 'd3-scale';\nimport { interpolateRdYlBu } from 'd3-scale-chromatic';\nimport update from 'immutability-helper';\nimport styled from 'styled-components';\nimport Markers from './Markers';\nimport { pushPinAction, setPinsAction } from '../store/actions/mapActions';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_API_KEY;\nconst mapStyle = 'mapbox://styles/pgres54268/cjuiu9aay60dx1fp784rt3x7r';\n\nconst StyledMap = styled.div`\n  transition: all 1.5s ease-in-out;\n  /* transition: transform 300ms ease-in-out; */\n`;\n\nexport const colorRamp = stop => {\n  const color = scaleDiverging(t => interpolateRdYlBu(1 - t)).domain([\n    0,\n    0.5,\n    1,\n  ]);\n  return color(stop);\n};\n\nconst generatePaint = () => {\n  const colorStops = [];\n  ticks(0, 1, 10).forEach(t => {\n    colorStops.push(t);\n    colorStops.push(colorRamp(t));\n  });\n  const paint = {\n    'line-color': '#ff0000',\n    'line-width': 2,\n    'line-gradient': [\n      'interpolate',\n      ['linear'],\n      ['line-progress'],\n      ...colorStops,\n    ],\n  };\n\n  return paint;\n};\n\nconst MapboxContainer = ({ mapHeight, pins, actions }) => {\n  const hasPins = pins.length > 0;\n  const { pushPin, setPins } = actions;\n  const [viewport, setViewport] = useState({\n    height: '100vh',\n    width: '100vw',\n    position: 'absolute',\n    longitude: -119,\n    latitude: 36,\n    zoom: 5,\n  });\n\n  const paint = useMemo(() => generatePaint(), []);\n\n  useEffect(() => {\n    setViewport(oldViewport => ({ ...oldViewport, height: mapHeight }));\n  }, [mapHeight, pins]);\n\n  const onMapClick = e => {\n    e.preventDefault();\n    pushPin(e.lngLat);\n  };\n\n  const onMarkerDragEnd = (e, index) => {\n    e.preventDefault();\n    const newPins = update(pins, {\n      [index]: { $set: [...e.lngLat] },\n    });\n    setPins(newPins);\n  };\n\n  const onViewportChange = nextViewport => {\n    if (viewport.longitude * nextViewport.longitude < 0) {\n      // TODO:\n      // We are moving across the antimeridian and need to\n      //   re-plot any pins near it\n      // const newPins = replotPinsNearAntimeridian(pins);\n      // console.log(pins, newPins);\n      // setPins(newPins);\n    }\n\n    setViewport({\n      ...nextViewport,\n      width: '100vw',\n    });\n  };\n\n  const linestringGeoJSON = { type: 'LineString', coordinates: [...pins] };\n  return (\n    <StyledMap>\n      <ReactMapGL\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        mapStyle={mapStyle}\n        onViewportChange={onViewportChange}\n        onClick={e => onMapClick(e)}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...viewport}\n      >\n        {hasPins && (\n          <div id=\"pin-markers\">\n            <Markers pins={pins} onMarkerDragEnd={onMarkerDragEnd} />\n            <Source\n              id=\"my-lines\"\n              type=\"geojson\"\n              data={linestringGeoJSON}\n              lineMetrics\n            >\n              <Layer id=\"lines\" type=\"line\" paint={{ ...paint }} />\n            </Source>\n          </div>\n        )}\n        <div style={{ position: 'absolute', right: 0 }}>\n          <NavigationControl />\n        </div>\n      </ReactMapGL>\n    </StyledMap>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {\n      pushPin: pin => dispatch(pushPinAction(pin)),\n      setPins: pins => dispatch(setPinsAction(pins)),\n    },\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    submitting: state.chart.submitting,\n    pins: state.map.pins,\n    // mapHeight: state.mapHeight,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapboxContainer);\n"]},"metadata":{},"sourceType":"module"}