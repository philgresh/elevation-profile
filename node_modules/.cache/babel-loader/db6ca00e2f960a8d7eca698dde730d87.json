{"ast":null,"code":"/* eslint-disable react/prop-types */import React,{useEffect,useRef}from'react';// import * as d3 from 'd3';\nimport{extent}from'd3-array';import{axisLeft}from'd3-axis';import{scaleDiverging,scaleLinear}from'd3-scale';import{select,selectAll}from'd3-selection';import{line as d3line,curveMonotoneX}from'd3-shape';import{interpolateRdBu}from'd3-scale-chromatic';var ChartSVG=function ChartSVG(_ref){var chartProps=_ref.chartProps,elevationData=_ref.elevationData;var width=chartProps.width,height=chartProps.height,margin=chartProps.margin;var ref=useRef();useEffect(function(){selectAll('svg > *').remove();var svg=select(ref.current);svg.attr('viewBox',[0,0,width,height]);// const { minElev, maxElev } = elevationData.reduce(\n//   (acc, point) => {\n//     let { min, max } = acc;\n//     min = Math.min(min, point.elevation);\n//     max = Math.max(max, point.elevation);\n//     return { min, max };\n//   },\n//   { minElev: Infinity, maxElev: -Infinity },\n// );\nvar color=scaleDiverging(function(t){return interpolateRdBu(1-t);}).domain([-11000,0,9000]);var x=scaleLinear().domain([0,elevationData.length]).range([margin.left,width-margin.right]);var y=scaleLinear().domain(extent(elevationData,function(r){return r.elevation;}))// .domain([minElev, maxElev])\n.nice().range([height-margin.bottom,margin.top]);var xAxis=function xAxis(g){return g.attr('transform',\"translate(0,\".concat(height-margin.bottom,\")\"))// .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0))\n.call(function(g){return g.select('.domain').remove();});};var yAxis=function yAxis(g){return g.attr('transform',\"translate(\".concat(margin.left,\",0)\")).call(axisLeft(y)).call(function(g){return g.select('.domain').remove();}).call(function(g){return g.select('.tick:last-of-type text').append('tspan').text(' meters');});};// const scaleIndex = scaleLinear()\n//   .domain([0, elevationData.length])\n//   .range([10, width - 10]);\n// const scaleElev = scaleLinear()\n//   .domain([maxElev, minElev])\n//   .range([10, height]);\nvar line=d3line().curve(curveMonotoneX).defined(function(d){return!Number.isNaN(d.elevation);}).x(function(d){return x(d.index);}).y(function(d){return y(d.elevation);});svg.append('g').call(xAxis);svg.append('g').call(yAxis);var svgDefs=svg.append('defs');var mainGradient=svgDefs.append('linearGradient').attr('id','mainGradient');mainGradient.attr('id','gradient').attr('gradientUnits','userSpaceOnUse').attr('x1',0).attr('y1',height-margin.bottom).attr('x2',0).attr('y2',margin.top).selectAll('stop').join('stop').attr('offset',function(d){return d;}).attr('stop-color',color.interpolator());svg.append('path').datum(elevationData).attr('fill','transparent')// .attr('stroke', 'url(#gradient)')\n.attr('stroke-width',3).attr('stroke-linejoin','round').attr('stroke-linecap','round').attr('d',line)// .style('stroke', 'url(#gradient)');\n.style('stroke','#222');},[elevationData]);return React.createElement(\"svg\",{ref:ref});};export default ChartSVG;","map":{"version":3,"sources":["/Users/phil/Documents/elevation-profile/src/Chart/chartSVGGenerator.js"],"names":["React","useEffect","useRef","extent","axisLeft","scaleDiverging","scaleLinear","select","selectAll","line","d3line","curveMonotoneX","interpolateRdBu","ChartSVG","chartProps","elevationData","width","height","margin","ref","remove","svg","current","attr","color","t","domain","x","length","range","left","right","y","r","elevation","nice","bottom","top","xAxis","g","call","yAxis","append","text","curve","defined","d","Number","isNaN","index","svgDefs","mainGradient","join","interpolator","datum","style"],"mappings":"AAAA,qCACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA;AACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,QAAT,KAAyB,SAAzB,CACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,UAA5C,CACA,OAASC,MAAT,CAAiBC,SAAjB,KAAkC,cAAlC,CACA,OAASC,IAAI,GAAIC,CAAAA,MAAjB,CAAyBC,cAAzB,KAA+C,UAA/C,CACA,OAASC,eAAT,KAAgC,oBAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAmC,IAAhCC,CAAAA,UAAgC,MAAhCA,UAAgC,CAApBC,aAAoB,MAApBA,aAAoB,IAC1CC,CAAAA,KAD0C,CAChBF,UADgB,CAC1CE,KAD0C,CACnCC,MADmC,CAChBH,UADgB,CACnCG,MADmC,CAC3BC,MAD2B,CAChBJ,UADgB,CAC3BI,MAD2B,CAGlD,GAAMC,CAAAA,GAAG,CAAGjB,MAAM,EAAlB,CAEAD,SAAS,CAAC,UAAM,CACdO,SAAS,CAAC,SAAD,CAAT,CAAqBY,MAArB,GACA,GAAMC,CAAAA,GAAG,CAAGd,MAAM,CAACY,GAAG,CAACG,OAAL,CAAlB,CACAD,GAAG,CAACE,IAAJ,CAAS,SAAT,CAAoB,CAAC,CAAD,CAAI,CAAJ,CAAOP,KAAP,CAAcC,MAAd,CAApB,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMO,CAAAA,KAAK,CAAGnB,cAAc,CAAC,SAAAoB,CAAC,QAAIb,CAAAA,eAAe,CAAC,EAAIa,CAAL,CAAnB,EAAF,CAAd,CAA4CC,MAA5C,CAAmD,CAC/D,CAAC,KAD8D,CAE/D,CAF+D,CAG/D,IAH+D,CAAnD,CAAd,CAMA,GAAMC,CAAAA,CAAC,CAAGrB,WAAW,GAClBoB,MADO,CACA,CAAC,CAAD,CAAIX,aAAa,CAACa,MAAlB,CADA,EAEPC,KAFO,CAED,CAACX,MAAM,CAACY,IAAR,CAAcd,KAAK,CAAGE,MAAM,CAACa,KAA7B,CAFC,CAAV,CAIA,GAAMC,CAAAA,CAAC,CAAG1B,WAAW,GAClBoB,MADO,CACAvB,MAAM,CAACY,aAAD,CAAgB,SAAAkB,CAAC,QAAIA,CAAAA,CAAC,CAACC,SAAN,EAAjB,CADN,CAER;AAFQ,CAGPC,IAHO,GAIPN,KAJO,CAID,CAACZ,MAAM,CAAGC,MAAM,CAACkB,MAAjB,CAAyBlB,MAAM,CAACmB,GAAhC,CAJC,CAAV,CAMA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,CAAC,QACbA,CAAAA,CAAC,CACEhB,IADH,CACQ,WADR,uBACoCN,MAAM,CAAGC,MAAM,CAACkB,MADpD,MAEE;AAFF,CAGGI,IAHH,CAGQ,SAAAD,CAAC,QAAIA,CAAAA,CAAC,CAAChC,MAAF,CAAS,SAAT,EAAoBa,MAApB,EAAJ,EAHT,CADa,EAAf,CAMA,GAAMqB,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAF,CAAC,QACbA,CAAAA,CAAC,CACEhB,IADH,CACQ,WADR,qBACkCL,MAAM,CAACY,IADzC,SAEGU,IAFH,CAEQpC,QAAQ,CAAC4B,CAAD,CAFhB,EAGGQ,IAHH,CAGQ,SAAAD,CAAC,QAAIA,CAAAA,CAAC,CAAChC,MAAF,CAAS,SAAT,EAAoBa,MAApB,EAAJ,EAHT,EAIGoB,IAJH,CAIQ,SAAAD,CAAC,QACLA,CAAAA,CAAC,CACEhC,MADH,CACU,yBADV,EAEGmC,MAFH,CAEU,OAFV,EAGGC,IAHH,CAGQ,SAHR,CADK,EAJT,CADa,EAAf,CAYA;AACA;AACA;AAEA;AACA;AACA;AAEA,GAAMlC,CAAAA,IAAI,CAAGC,MAAM,GAChBkC,KADU,CACJjC,cADI,EAEVkC,OAFU,CAEF,SAAAC,CAAC,QAAI,CAACC,MAAM,CAACC,KAAP,CAAaF,CAAC,CAACZ,SAAf,CAAL,EAFC,EAGVP,CAHU,CAGR,SAAAmB,CAAC,QAAInB,CAAAA,CAAC,CAACmB,CAAC,CAACG,KAAH,CAAL,EAHO,EAIVjB,CAJU,CAIR,SAAAc,CAAC,QAAId,CAAAA,CAAC,CAACc,CAAC,CAACZ,SAAH,CAAL,EAJO,CAAb,CAMAb,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBF,KAArB,EAEAjB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,KAArB,EAEA,GAAMS,CAAAA,OAAO,CAAG7B,GAAG,CAACqB,MAAJ,CAAW,MAAX,CAAhB,CAEA,GAAMS,CAAAA,YAAY,CAAGD,OAAO,CACzBR,MADkB,CACX,gBADW,EAElBnB,IAFkB,CAEb,IAFa,CAEP,cAFO,CAArB,CAIA4B,YAAY,CACT5B,IADH,CACQ,IADR,CACc,UADd,EAEGA,IAFH,CAEQ,eAFR,CAEyB,gBAFzB,EAGGA,IAHH,CAGQ,IAHR,CAGc,CAHd,EAIGA,IAJH,CAIQ,IAJR,CAIcN,MAAM,CAAGC,MAAM,CAACkB,MAJ9B,EAKGb,IALH,CAKQ,IALR,CAKc,CALd,EAMGA,IANH,CAMQ,IANR,CAMcL,MAAM,CAACmB,GANrB,EAOG7B,SAPH,CAOa,MAPb,EAQG4C,IARH,CAQQ,MARR,EASG7B,IATH,CASQ,QATR,CASkB,SAAAuB,CAAC,QAAIA,CAAAA,CAAJ,EATnB,EAUGvB,IAVH,CAUQ,YAVR,CAUsBC,KAAK,CAAC6B,YAAN,EAVtB,EAYAhC,GAAG,CACAqB,MADH,CACU,MADV,EAEGY,KAFH,CAESvC,aAFT,EAGGQ,IAHH,CAGQ,MAHR,CAGgB,aAHhB,CAIE;AAJF,CAKGA,IALH,CAKQ,cALR,CAKwB,CALxB,EAMGA,IANH,CAMQ,iBANR,CAM2B,OAN3B,EAOGA,IAPH,CAOQ,gBAPR,CAO0B,OAP1B,EAQGA,IARH,CAQQ,GARR,CAQad,IARb,CASE;AATF,CAUG8C,KAVH,CAUS,QAVT,CAUmB,MAVnB,EAWD,CAhGQ,CAgGN,CAACxC,aAAD,CAhGM,CAAT,CAiGA,MAAO,4BAAK,GAAG,CAAEI,GAAV,EAAP,CACD,CAvGD,CAyGA,cAAeN,CAAAA,QAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect, useRef } from 'react';\n// import * as d3 from 'd3';\nimport { extent } from 'd3-array';\nimport { axisLeft } from 'd3-axis';\nimport { scaleDiverging, scaleLinear } from 'd3-scale';\nimport { select, selectAll } from 'd3-selection';\nimport { line as d3line, curveMonotoneX } from 'd3-shape';\nimport { interpolateRdBu } from 'd3-scale-chromatic';\n\nconst ChartSVG = ({ chartProps, elevationData }) => {\n  const { width, height, margin } = chartProps;\n\n  const ref = useRef();\n\n  useEffect(() => {\n    selectAll('svg > *').remove();\n    const svg = select(ref.current);\n    svg.attr('viewBox', [0, 0, width, height]);\n\n    // const { minElev, maxElev } = elevationData.reduce(\n    //   (acc, point) => {\n    //     let { min, max } = acc;\n    //     min = Math.min(min, point.elevation);\n    //     max = Math.max(max, point.elevation);\n    //     return { min, max };\n    //   },\n    //   { minElev: Infinity, maxElev: -Infinity },\n    // );\n\n    const color = scaleDiverging(t => interpolateRdBu(1 - t)).domain([\n      -11000,\n      0,\n      9000,\n    ]);\n\n    const x = scaleLinear()\n      .domain([0, elevationData.length])\n      .range([margin.left, width - margin.right]);\n\n    const y = scaleLinear()\n      .domain(extent(elevationData, r => r.elevation))\n      // .domain([minElev, maxElev])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = g =>\n      g\n        .attr('transform', `translate(0,${height - margin.bottom})`)\n        // .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0))\n        .call(g => g.select('.domain').remove());\n\n    const yAxis = g =>\n      g\n        .attr('transform', `translate(${margin.left},0)`)\n        .call(axisLeft(y))\n        .call(g => g.select('.domain').remove())\n        .call(g =>\n          g\n            .select('.tick:last-of-type text')\n            .append('tspan')\n            .text(' meters'),\n        );\n\n    // const scaleIndex = scaleLinear()\n    //   .domain([0, elevationData.length])\n    //   .range([10, width - 10]);\n\n    // const scaleElev = scaleLinear()\n    //   .domain([maxElev, minElev])\n    //   .range([10, height]);\n\n    const line = d3line()\n      .curve(curveMonotoneX)\n      .defined(d => !Number.isNaN(d.elevation))\n      .x(d => x(d.index))\n      .y(d => y(d.elevation));\n\n    svg.append('g').call(xAxis);\n\n    svg.append('g').call(yAxis);\n\n    const svgDefs = svg.append('defs');\n\n    const mainGradient = svgDefs\n      .append('linearGradient')\n      .attr('id', 'mainGradient');\n\n    mainGradient\n      .attr('id', 'gradient')\n      .attr('gradientUnits', 'userSpaceOnUse')\n      .attr('x1', 0)\n      .attr('y1', height - margin.bottom)\n      .attr('x2', 0)\n      .attr('y2', margin.top)\n      .selectAll('stop')\n      .join('stop')\n      .attr('offset', d => d)\n      .attr('stop-color', color.interpolator());\n\n    svg\n      .append('path')\n      .datum(elevationData)\n      .attr('fill', 'transparent')\n      // .attr('stroke', 'url(#gradient)')\n      .attr('stroke-width', 3)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('d', line)\n      // .style('stroke', 'url(#gradient)');\n      .style('stroke', '#222');\n  }, [elevationData]);\n  return <svg ref={ref} />;\n};\n\nexport default ChartSVG;\n"]},"metadata":{},"sourceType":"module"}