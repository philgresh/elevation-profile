{"ast":null,"code":"import _toConsumableArray from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/phil/Documents/elevation-profile/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';// import fetch from 'cross-fetch';\nvar NUM_SAMPLES=100;var replotPointsNearAntimeridian=function replotPointsNearAntimeridian(pins){return pins.map(function(_ref){var _ref2=_slicedToArray(_ref,2),lng=_ref2[0],lat=_ref2[1];var newLng=lng;if(lng>180)newLng-=360;if(lng<-180)newLng+=360;return[newLng,lat];});};var getURLParams=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(pins){var samples,newPins,key,path,params,url;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:samples=Math.min(NUM_SAMPLES*(pins.length-1),500);newPins=replotPointsNearAntimeridian(pins);key=process.env.REACT_APP_GOOGLE_MAPS_ELEV_API_KEY;path=newPins.reduce(function(acc,_ref4,index){var _ref5=_slicedToArray(_ref4,2),lng=_ref5[0],lat=_ref5[1];var newAcc=\"\".concat(acc).concat(lat,\",\").concat(lng);if(index!==newPins.length-1)newAcc+='|';return newAcc;},'');params={samples:samples,path:path,key:key};url='https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/elevation/json';return _context.abrupt(\"return\",{url:url,params:params});case 7:case\"end\":return _context.stop();}}},_callee);}));return function getURLParams(_x){return _ref3.apply(this,arguments);};}();var indexedElevData=function indexedElevData(data){return data.results.map(function(p,index){return{index:index,elevation:p.elevation,lat:p.location.lat,lng:p.location.lng};});};export var setSubmitting=function setSubmitting(_ref6){var submitting=_ref6.submitting;return function(dispatch){dispatch({submitting:submitting,type:'SET_SUBMITTING'});};};export var getElevationDataAction=function getElevationDataAction(){return(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var _getState,map,pins,_ref8,url,params;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_getState=getState(),map=_getState.map;pins=map.pins;dispatch(setSubmitting({submitting:true}));_context2.next=5;return getURLParams(pins);case 5:_ref8=_context2.sent;url=_ref8.url;params=_ref8.params;_context2.next=10;return axios.get(url,{params:params}).then(function(_ref9){var data=_ref9.data;var indexedData=indexedElevData(data);dispatch({type:'SET_ELEVATION_DATA',elevationData:_toConsumableArray(indexedData)});dispatch({type:'SET_MAP_HEIGHT',mapHeight:'75vh'});}).catch(function(err){console.error(err);}).finally(function(){return dispatch(setSubmitting({submitting:false}));});case 10:return _context2.abrupt(\"return\",_context2.sent);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref7.apply(this,arguments);};}());};","map":{"version":3,"sources":["/Users/phil/Documents/elevation-profile/src/store/actions/chartActions.js"],"names":["axios","NUM_SAMPLES","replotPointsNearAntimeridian","pins","map","lng","lat","newLng","getURLParams","samples","Math","min","length","newPins","key","process","env","REACT_APP_GOOGLE_MAPS_ELEV_API_KEY","path","reduce","acc","index","newAcc","params","url","indexedElevData","data","results","p","elevation","location","setSubmitting","submitting","dispatch","type","getElevationDataAction","getState","get","then","indexedData","elevationData","mapHeight","catch","err","console","error","finally"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// import fetch from 'cross-fetch';\nconst NUM_SAMPLES = 100;\n\nconst replotPointsNearAntimeridian = pins =>\n  pins.map(([lng, lat]) => {\n    let newLng = lng;\n    if (lng > 180) newLng -= 360;\n    if (lng < -180) newLng += 360;\n    return [newLng, lat];\n  });\n\nconst getURLParams = async pins => {\n  const samples = Math.min(NUM_SAMPLES * (pins.length - 1), 500);\n  const newPins = replotPointsNearAntimeridian(pins);\n  const key = process.env.REACT_APP_GOOGLE_MAPS_ELEV_API_KEY;\n  const path = newPins.reduce((acc, [lng, lat], index) => {\n    let newAcc = `${acc}${lat},${lng}`;\n    if (index !== newPins.length - 1) newAcc += '|';\n    return newAcc;\n  }, '');\n  const params = {\n    samples,\n    path,\n    key,\n  };\n  const url =\n    'https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/elevation/json';\n  return { url, params };\n};\n\nconst indexedElevData = data => {\n  return data.results.map((p, index) => ({\n    index,\n    elevation: p.elevation,\n    lat: p.location.lat,\n    lng: p.location.lng,\n  }));\n};\n\nexport const setSubmitting = ({ submitting }) => {\n  return dispatch => {\n    dispatch({ submitting, type: 'SET_SUBMITTING' });\n  };\n};\n\nexport const getElevationDataAction = () => {\n  return async (dispatch, getState) => {\n    const { map } = getState();\n    const { pins } = map;\n\n    dispatch(setSubmitting({ submitting: true }));\n\n    const { url, params } = await getURLParams(pins);\n\n    // eslint-disable-next-line no-return-await\n    return await axios\n      .get(url, { params })\n      .then(({ data }) => {\n        const indexedData = indexedElevData(data);\n        dispatch({\n          type: 'SET_ELEVATION_DATA',\n          elevationData: [...indexedData],\n        });\n        dispatch({ type: 'SET_MAP_HEIGHT', mapHeight: '75vh' });\n      })\n      .catch(err => {\n        console.error(err);\n      })\n      .finally(() => dispatch(setSubmitting({ submitting: false })));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}