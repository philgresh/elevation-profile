{"ast":null,"code":"/* eslint-disable no-shadow */ /* eslint-disable react/prop-types */import React,{useEffect,useRef}from'react';// import * as d3 from 'd3';\nimport{extent,ticks}from'd3-array';import{axisLeft}from'd3-axis';import{scaleDiverging,scaleLinear}from'd3-scale';import{select,selectAll}from'd3-selection';import{line as d3line,curveNatural}from'd3-shape';import{interpolateRdYlBu}from'd3-scale-chromatic';import SvgLines from'react-mt-svg-lines';var ChartSVG=function ChartSVG(_ref){var chartProps=_ref.chartProps,elevationData=_ref.elevationData;var width=chartProps.width,height=chartProps.height,margin=chartProps.margin;var mainRef=useRef();useEffect(function(){selectAll('svg > *').remove();var mainSVG=select(mainRef.current);var elevExtent=extent(elevationData,function(point){return point.elevation;});var color=scaleDiverging(function(t){return interpolateRdYlBu(1-t);}).domain(elevExtent);var x=scaleLinear().domain([0,elevationData.length]).range([margin.left,width-margin.right]);var y=scaleLinear().domain(elevExtent).nice().range([height-margin.bottom,margin.top]);var xAxis=function xAxis(g){return g.attr('transform',\"translate(0,\".concat(height-margin.bottom,\")\")).call(function(g){return g.select('.domain').remove();});};var yAxis=function yAxis(g){return g.attr('transform',\"translate(\".concat(margin.left,\",0)\")).call(axisLeft(y)).call(function(g){return g.select('.domain').remove();}).call(function(g){return g.select('.tick:last-of-type text').append('tspan').text(' meters');});};// const scaleIndex = scaleLinear()\n//   .domain([0, elevationData.length])\n//   .range([10, width - 10]);\n// const scaleElev = scaleLinear()\n//   .domain([maxElev, minElev])\n//   .range([10, height]);\nvar elevCurve=d3line().curve(curveNatural).defined(function(d){return!Number.isNaN(d.elevation);}).x(function(d){return x(d.index);}).y(function(d){return y(d.elevation);});// console.log({\n//   zero: y(0),\n//   elev0: y(elevExtent[0]),\n//   elev1: y(elevExtent[1]),\n// });\nif(y(0)<y(elevExtent[0])||y(0)>y(elevExtent[1])){mainSVG.append('line').attr('id','waterline').style('stroke','lightblue').style('stroke-opacity',0.5).style('fill','#').style('stroke-width',2).style('stroke-dasharray','10 5 10').attr('x1',margin.left).attr('y1',y(0)).attr('x2',width-margin.right).attr('y2',y(0));}mainSVG.append('g').call(xAxis);mainSVG.append('g').call(yAxis);var mainSVGDefs=mainSVG.append('defs');var mainGradient=mainSVGDefs.append('linearGradient').attr('id','mainGradient');mainGradient.attr('id','gradient').attr('gradientUnits','userSpaceOnUse').attr('x1',margin.left).attr('y1',margin.top).attr('x2',width-margin.right).attr('y2',height-margin.bottom).selectAll('stop').data(ticks(0,1,10)).join('stop').attr('offset',function(d){return d;}).attr('stop-color',color.interpolator());mainSVG.append('path').datum(elevationData).attr('fill','transparent').attr('stroke','url(#gradient)').attr('stroke-width',3).attr('stroke-linejoin','round').attr('stroke-linecap','round').attr('d',elevCurve);},[elevationData]);return React.createElement(SvgLines,{animate:true,duration:500},React.createElement(\"svg\",{ref:mainRef,viewBox:\"0, 0, \".concat(width,\", \").concat(height)}));};export default ChartSVG;","map":{"version":3,"sources":["/Users/phil/Documents/elevation-profile/src/Chart/chartSVGGenerator.js"],"names":["React","useEffect","useRef","extent","ticks","axisLeft","scaleDiverging","scaleLinear","select","selectAll","line","d3line","curveNatural","interpolateRdYlBu","SvgLines","ChartSVG","chartProps","elevationData","width","height","margin","mainRef","remove","mainSVG","current","elevExtent","point","elevation","color","t","domain","x","length","range","left","right","y","nice","bottom","top","xAxis","g","attr","call","yAxis","append","text","elevCurve","curve","defined","d","Number","isNaN","index","style","mainSVGDefs","mainGradient","data","join","interpolator","datum"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useRef } from 'react';\n// import * as d3 from 'd3';\nimport { extent, ticks } from 'd3-array';\nimport { axisLeft } from 'd3-axis';\nimport { scaleDiverging, scaleLinear } from 'd3-scale';\nimport { select, selectAll } from 'd3-selection';\nimport { line as d3line, curveNatural } from 'd3-shape';\nimport { interpolateRdYlBu } from 'd3-scale-chromatic';\nimport SvgLines from 'react-mt-svg-lines';\n\nconst ChartSVG = ({ chartProps, elevationData }) => {\n  const { width, height, margin } = chartProps;\n\n  const mainRef = useRef();\n\n  useEffect(() => {\n    selectAll('svg > *').remove();\n    const mainSVG = select(mainRef.current);\n    const elevExtent = extent(elevationData, point => point.elevation);\n    const color = scaleDiverging(t => interpolateRdYlBu(1 - t)).domain(\n      elevExtent,\n    );\n\n    const x = scaleLinear()\n      .domain([0, elevationData.length])\n      .range([margin.left, width - margin.right]);\n\n    const y = scaleLinear()\n      .domain(elevExtent)\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = g =>\n      g\n        .attr('transform', `translate(0,${height - margin.bottom})`)\n        .call(g => g.select('.domain').remove());\n\n    const yAxis = g =>\n      g\n        .attr('transform', `translate(${margin.left},0)`)\n        .call(axisLeft(y))\n        .call(g => g.select('.domain').remove())\n        .call(g =>\n          g\n            .select('.tick:last-of-type text')\n            .append('tspan')\n            .text(' meters'),\n        );\n\n    // const scaleIndex = scaleLinear()\n    //   .domain([0, elevationData.length])\n    //   .range([10, width - 10]);\n\n    // const scaleElev = scaleLinear()\n    //   .domain([maxElev, minElev])\n    //   .range([10, height]);\n\n    const elevCurve = d3line()\n      .curve(curveNatural)\n      .defined(d => !Number.isNaN(d.elevation))\n      .x(d => x(d.index))\n      .y(d => y(d.elevation));\n\n    // console.log({\n    //   zero: y(0),\n    //   elev0: y(elevExtent[0]),\n    //   elev1: y(elevExtent[1]),\n    // });\n    if (y(0) < y(elevExtent[0]) || y(0) > y(elevExtent[1])) {\n      mainSVG\n        .append('line')\n        .attr('id', 'waterline')\n        .style('stroke', 'lightblue')\n        .style('stroke-opacity', 0.5)\n        .style('fill', '#')\n        .style('stroke-width', 2)\n        .style('stroke-dasharray', '10 5 10')\n        .attr('x1', margin.left)\n        .attr('y1', y(0))\n        .attr('x2', width - margin.right)\n        .attr('y2', y(0));\n    }\n\n    mainSVG.append('g').call(xAxis);\n    mainSVG.append('g').call(yAxis);\n\n    const mainSVGDefs = mainSVG.append('defs');\n\n    const mainGradient = mainSVGDefs\n      .append('linearGradient')\n      .attr('id', 'mainGradient');\n\n    mainGradient\n      .attr('id', 'gradient')\n      .attr('gradientUnits', 'userSpaceOnUse')\n      .attr('x1', margin.left)\n      .attr('y1', margin.top)\n      .attr('x2', width - margin.right)\n      .attr('y2', height - margin.bottom)\n      .selectAll('stop')\n      .data(ticks(0, 1, 10))\n      .join('stop')\n      .attr('offset', d => d)\n      .attr('stop-color', color.interpolator());\n\n    mainSVG\n      .append('path')\n      .datum(elevationData)\n      .attr('fill', 'transparent')\n      .attr('stroke', 'url(#gradient)')\n      .attr('stroke-width', 3)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('d', elevCurve);\n  }, [elevationData]);\n  return (\n    <SvgLines animate duration={500}>\n      <svg ref={mainRef} viewBox={`0, 0, ${width}, ${height}`} />\n    </SvgLines>\n  );\n};\n\nexport default ChartSVG;\n"]},"metadata":{},"sourceType":"module"}